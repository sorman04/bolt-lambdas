name: Deploy Lambda functions for Bolt PO robot

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy-to-aws:
    name: deploy
    runs-on: ubuntu-latest

    env:
      NODE_VERSION: 16  # used for installing the serverless-python-requirements dependency from npm

    steps:
    - 
      name: Checkout Branch
      uses: actions/checkout@v4
    -
      name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip' # caching pip dependencies
    -
      name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    -
      name: Lint with Flake8
      run: |
        # stop the build if there are Python syntax errors
        flake8 . --count --select=E9,F63,F82 --show-source --statistics
        # exit-zero treats all errors as warnings, set gh editor width to 127
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    -
      name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    -
      name: Install Node.js dependencies (we are looking for serverless-python-requirements)
      run: |
        npm install
        npm i -D serverless-dotenv-plugin
    -
      name: Deploy Serverless with Python Requirements
      uses: dhollerbach/actions.serverless-with-python-requirements@v2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        STAGE: dev
        # SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        # or alternatively if using aws credentials directly

            

    